on: push

name: "Deploy Ions"

jobs:
  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup borkdude/jet
        run: bash <(curl -s https://raw.githubusercontent.com/borkdude/jet/master/install)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::118776085668:role/github-actions-ions-deployment
          aws-region: eu-central-1
      - name: Setup Java
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'corretto'
          java-version: '8'
      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@10.1
        with:
          cli: 'latest'
      - name: Cache Clojure Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-${{ hashFiles('deps.edn') }}
          restore-keys: cljdeps-
      - name: Push code to AWS CodeDeploy
        run: |
          push_result=$(clojure -A:ion-dev '{:op :push}' | tail -6)
          echo "$push_result"
          echo "DEPLOY_COMMAND=$(echo "$push_result" | jet --query ':deploy-command println')" >> $GITHUB_ENV
      - name: Deploy revision to Datomic via AWS Step Functions
        run: echo "DEPLOY_RESULT=$(eval "$DEPLOY_COMMAND")" >> $GITHUB_ENV
      - name: Display deploy result
        run: echo "$DEPLOY_RESULT"
      - name: Extract status command
        run: echo "STATUS_COMMAND=$(echo "$deploy_result" | jet --query ':status-command println')" >> $GITHUB_ENV
      - name: Wait until any final status is reached
        run: |
          while
            state=$(eval "$STATUS_COMMAND")
            echo "$state" | jet --query ':code-deploy-status println' | grep -x -F 'RUNNING'
          do
            echo "running: $state"
            sleep 1
          done
          echo "finished: $state"
